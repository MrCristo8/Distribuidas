package beans;
// Generated Dec 13, 2018 12:47:24 AM by Hibernate Tools 4.3.1

import controller.CityPersistance;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.context.FacesContext;
import model.WbCrCity;

/**
 * CityBean generated by hbm2java
 */
@ManagedBean()
@SessionScoped
public class CityBean implements java.io.Serializable
{

    private int cityId;
    private String cityName;
    private ArrayList<WbCrCity> cityList;
    private String filterString;
    private ArrayList<WbCrCity> filteredList;
    private WbCrCity current;
    private Set wbCrBills = new HashSet(0);

    public CityBean()
    {
    }

    public CityBean(int cityId, String cityName)
    {
        this.cityId = cityId;
        this.cityName = cityName;
    }

    public CityBean(int cityId, String cityName, Set wbCrBills)
    {
        this.cityId = cityId;
        this.cityName = cityName;
        this.wbCrBills = wbCrBills;
    }

    public int getCityId()
    {
        return this.cityId;
    }

    public void setCityId(int cityId)
    {
        this.cityId = cityId;
    }

    public String getCityName()
    {
        return this.cityName;
    }

    public void setCityName(String cityName)
    {
        this.cityName = cityName;
    }

    public Set getWbCrBills()
    {
        return this.wbCrBills;
    }

    public void setWbCrBills(Set wbCrBills)
    {
        this.wbCrBills = wbCrBills;
    }

    public ArrayList<WbCrCity> getCityList()
    {
        cityList = controller.CityPersistance.getInstance().getAll();
        return cityList;
    }

    public String getFilterString()
    {
        return filterString;
    }

    public void setFilterString(String filterString)
    {
        this.filterString = filterString;
    }

    public ArrayList<WbCrCity> getFilteredList()
    {
        if(filteredList == null) filteredList = new ArrayList<>();
        return filteredList;
    }

    public WbCrCity getCurrent()
    {
        return current;
    }

    public void setCurrent(WbCrCity current)
    {
        this.current = current;
    }
    
    
    
    public void filter()
    {
        if (cityList != null && getFilteredList() != null && filterString != null)
        {
            if (cityList.size() >= 1)
            {
                getFilteredList().clear();
                cityList.forEach(x ->
                {
                    if (x.getCityName().toUpperCase().contains(filterString.toUpperCase()))
                    {
                        getFilteredList().add(x);
                    }
                });

            }
        }

    }
    
    public void Change() {
        try {
            FacesContext.getCurrentInstance().getExternalContext().redirect("new.xhtml");
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        }
    }
    
    public void Add(){
        int id=1;
        List<WbCrCity> cities = CityPersistance.getInstance().getAll();
        for (WbCrCity city : cities) {
            if(city.getCityId()!=id){
                continue;
            }
            id++;
        }
        CityPersistance.getInstance().persistObject(new WbCrCity(id, cityName));
        try {
            cityName="";
            FacesContext.getCurrentInstance().getExternalContext().redirect("list.xhtml");
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        }
    }
    
}
